  
  // using children props as component using react.cloneElement
  const app = ({children})=>{
  const sliderElements = data?.map((item) => (
    <SwiperSlide key={item.id} className={styles.swiperSlide}>
      {React.cloneElement(children, { item, key: item.id })}
    </SwiperSlide>
  ));
  
  }
  
  
/*******************************************/
close menu when click outside

//1- declare state with initial value (fasle)
  const [loginMenuControl, setLoginMenuControl] = useState(false);
  
//2- use use ref to target the menu
  const loginMenu = useRef();
  
//3- useEffect run after click mosue event  
  useEffect(() => {
    const handler = (e) => {
      //if the element which clicked not in the menu then
      if (!loginMenu.current.contains(e.target)) {
        setLoginMenuControl(false);
      }
    };
    document.addEventListener("mousedown", handler);
    // cleanup event listeners
    return () => {
      document.removeEventListener("mousedown", handler);
    };
  });
  
  at return Dom
  return ({
    loginMenuControl&&
    <div>menu</div>
  })
  
  
  /********************************************************************
    import axios, { CanceledError } from "axios";

  useEffect(() => {
    const Controller = new AbortController();

    axios
      .get("https://jsonplaceholder.typicode.com/todos/1", {
        signal: Controller.signal,
      })
      .then((response) => {
        console.log(response.data);
      })
      .catch((error) => {
        if (error instanceof CanceledError) {
          console.log("Request canceled");
        } else {
          console.log(error);
        }
      });

    return () => {
      Controller.abort();
    };
    
  }, []);
  
